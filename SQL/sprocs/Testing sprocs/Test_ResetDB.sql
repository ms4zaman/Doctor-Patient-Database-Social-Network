DROP PROCEDURE IF EXISTS Test_ResetDB;

DELIMITER $

CREATE PROCEDURE Test_ResetDB()
BEGIN

-- MySQL Script generated by MySQL Workbench
-- 03/21/15 16:46:58
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ece356db_dctittel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ece356db_dctittel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ece356db_dctittel` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
--USE `ece356db_dctittel` ;

-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Province`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Province` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Province` (
  `provinceID` VARCHAR(2) NOT NULL,
  `provinceName` VARCHAR(45) NULL,
  PRIMARY KEY (`provinceID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Users` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Users` (
  `alias` VARCHAR(30) NOT NULL,
  `password` VARCHAR(45) NULL,
  `level` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`alias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Patient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Patient` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Patient` (
  `alias` VARCHAR(30) NOT NULL,
  `city` VARCHAR(45) NULL,
  `provinceID` VARCHAR(2) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`alias`),
  INDEX `province2_idx` (`provinceID` ASC),
  CONSTRAINT `province2`
    FOREIGN KEY (`provinceID`)
    REFERENCES `ece356db_dctittel`.`Province` (`provinceID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user3`
    FOREIGN KEY (`alias`)
    REFERENCES `ece356db_dctittel`.`Users` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Doctor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Doctor` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Doctor` (
  `alias` VARCHAR(30) NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `gender` INT NULL DEFAULT 0,
  `email` VARCHAR(45) NULL,
  `licenseYear` INT NULL,
  PRIMARY KEY (`alias`),
  CONSTRAINT `User2`
    FOREIGN KEY (`alias`)
    REFERENCES `ece356db_dctittel`.`Users` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Address` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Address` (
  `addressID` INT NOT NULL AUTO_INCREMENT,
  `number` INT NULL,
  `streetName` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `provinceID` VARCHAR(2) NULL,
  `postalCode` VARCHAR(6) NULL,
  PRIMARY KEY (`addressID`),
  INDEX `province_idx` (`provinceID` ASC),
  CONSTRAINT `province`
    FOREIGN KEY (`provinceID`)
    REFERENCES `ece356db_dctittel`.`Province` (`provinceID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Review` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Review` (
  `reviewID` INT NOT NULL AUTO_INCREMENT,
  `reviewer` VARCHAR(30) NULL,
  `reviewee` VARCHAR(30) NULL,
  `starRating` DOUBLE NULL,
  `comments` VARCHAR(1000) NULL,
  `creationDate` DATETIME NULL,
  PRIMARY KEY (`reviewID`),
  INDEX `doctor_idx` (`reviewee` ASC),
  INDEX `patient_idx` (`reviewer` ASC),
  CONSTRAINT `doctor`
    FOREIGN KEY (`reviewee`)
    REFERENCES `ece356db_dctittel`.`Doctor` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `patient`
    FOREIGN KEY (`reviewer`)
    REFERENCES `ece356db_dctittel`.`Patient` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Friend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Friend` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Friend` (
  `Requester` VARCHAR(30) NOT NULL,
  `Requestee` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`Requester`, `Requestee`),
  CONSTRAINT `Users`
    FOREIGN KEY (`Requester`)
    REFERENCES `ece356db_dctittel`.`Patient` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`Requestee`)
    REFERENCES `ece356db_dctittel`.`Patient` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`Specialization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`Specialization` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`Specialization` (
  `specializationID` INT NOT NULL AUTO_INCREMENT,
  `specializationName` VARCHAR(45) NULL,
  PRIMARY KEY (`specializationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`hasAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`hasAddress` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`hasAddress` (
  `alias` VARCHAR(30) NOT NULL,
  `hasAddress` INT NOT NULL,
  PRIMARY KEY (`alias`, `hasAddress`),
  INDEX `Address_idx` (`hasAddress` ASC),
  CONSTRAINT `Alias2`
    FOREIGN KEY (`alias`)
    REFERENCES `ece356db_dctittel`.`Doctor` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Address`
    FOREIGN KEY (`hasAddress`)
    REFERENCES `ece356db_dctittel`.`Address` (`addressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ece356db_dctittel`.`hasSpecialization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ece356db_dctittel`.`hasSpecialization` ;

CREATE TABLE IF NOT EXISTS `ece356db_dctittel`.`hasSpecialization` (
  `alias` VARCHAR(30) NOT NULL,
  `hasSpecialization` INT NOT NULL,
  PRIMARY KEY (`alias`, `hasSpecialization`),
  INDEX `Address0_idx` (`hasSpecialization` ASC),
  CONSTRAINT `Alias0`
    FOREIGN KEY (`alias`)
    REFERENCES `ece356db_dctittel`.`Doctor` (`alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Address0`
    FOREIGN KEY (`hasSpecialization`)
    REFERENCES `ece356db_dctittel`.`Specialization` (`specializationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Populate Province Table
INSERT INTO Province (provinceID, provinceName) VALUES ('AB','Alberta');
INSERT INTO Province (provinceID, provinceName) VALUES ('BC','British Columbia');
INSERT INTO Province (provinceID, provinceName) VALUES ('MB','Manitoba');
INSERT INTO Province (provinceID, provinceName) VALUES ('NB','New Brunswick');
INSERT INTO Province (provinceID, provinceName) VALUES ('NL','Newfoundland and Labrador');
INSERT INTO Province (provinceID, provinceName) VALUES ('NS','Nova Scotia');
INSERT INTO Province (provinceID, provinceName) VALUES ('NT','Northwest Territories');
INSERT INTO Province (provinceID, provinceName) VALUES ('NU','Nunavut');
INSERT INTO Province (provinceID, provinceName) VALUES ('ON','Ontario');
INSERT INTO Province (provinceID, provinceName) VALUES ('PE','Prince Edward Island');
INSERT INTO Province (provinceID, provinceName) VALUES ('QC','Quebec');
INSERT INTO Province (provinceID, provinceName) VALUES ('SK','Saskatchewan');
INSERT INTO Province (provinceID, provinceName) VALUES ('YT','Yukon');


--Populate initial Doctors
INSERT INTO Users (alias, password, level) VALUES ('doc_aiken', PASSWORD(alias), '1');
INSERT INTO Doctor (alias, firstname, lastname, gender, email, licenseYear) VALUES ('doc_aiken', 'John', 'Aikenhead', 1, 'aiken@head.com', 1990);
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (1, 'Elizabeth Street', 'Waterloo', 'ON', 'N2L2W8');
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (2, 'Aikenhead Street', 'Kitchener', 'ON', 'N2P1K2');
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_aiken', 1);
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_aiken', 2);
INSERT INTO Specialization (specializationName) VALUES ('allergologist');
INSERT INTO Specialization (specializationName) VALUES ('naturopath');
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_aiken', 1);
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_aiken', 2);

INSERT INTO Users (alias, password, level) VALUES ('doc_amnio', PASSWORD(alias), '1');
INSERT INTO Doctor (alias, firstname, lastname, gender, email, licenseYear) VALUES ('doc_amnio', 'Jane', 'Amniotic', 2, 'obgyn_clinic@rogers.com', 2005);
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (1, 'Jane Street', 'Waterloo', 'ON', 'N2L2W8');
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (2, 'Amniotic Street', 'Kitchener', 'ON', 'N2P2K5');
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_amnio', 3);
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_amnio', 4);
INSERT INTO Specialization (specializationName) VALUES ('obstetrician');
INSERT INTO Specialization (specializationName) VALUES ('gynecologist');
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_amnio', 3);
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_amnio', 4);

INSERT INTO Users (alias, password, level) VALUES ('doc_umbilical', PASSWORD(alias), '1');
INSERT INTO Doctor (alias, firstname, lastname, gender, email, licenseYear) VALUES ('doc_umbilical', 'Mary', 'Umbilical', 2, 'obgyn_clinic@rogers.com', 2006);
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (1, 'Mary Street', 'Cambridge', 'ON', 'N2L1A2');
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (2, 'Amniotic Street', 'Kitchener', 'ON', 'N2P2K5');
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_umbilical', 5);
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_umbilical', 6);
INSERT INTO Specialization (specializationName) VALUES ('obstetrician');
INSERT INTO Specialization (specializationName) VALUES ('naturopath');
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_umbilical', 5);
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_umbilical', 6);

INSERT INTO Users (alias, password, level) VALUES ('doc_heart', PASSWORD(alias), '1');
INSERT INTO Doctor (alias, firstname, lastname, gender, email, licenseYear) VALUES ('doc_heart', 'Jack', 'Hearty', 1, 'aiken@head.com', 1980);
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (1, 'Jack Street', 'Guelph', 'ON', 'N2L1G2');
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (2, 'Heart Street', 'Waterloo', 'ON', 'N2P2W5');
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_heart', 7);
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_heart', 8);
INSERT INTO Specialization (specializationName) VALUES ('cardiologist');
INSERT INTO Specialization (specializationName) VALUES ('surgeon');
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_heart', 7);
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_heart', 8);

INSERT INTO Users (alias, password, level) VALUES ('doc_cutter', PASSWORD(alias), '1');
INSERT INTO Doctor (alias, firstname, lastname, gender, email, licenseYear) VALUES ('doc_cutter', 'Beth', 'Cutter', 2, 'beth@tummytuck.com', 2014);
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (1, 'Beth Street', 'Cambridge', 'ON', 'N2L1C2');
INSERT INTO Address (number, streetName, city, provinceID, postalCode) VALUES (2, 'Cutter Street', 'Kitchener', 'ON', 'N2P2K5');
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_cutter', 9);
INSERT INTO hasAddress (alias, hasAddress) VALUES ('doc_cutter', 10);
INSERT INTO Specialization (specializationName) VALUES ('surgeon');
INSERT INTO Specialization (specializationName) VALUES ('psychiatrist');
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_cutter', 9);
INSERT INTO hasSpecialization (alias, hasSpecialization) VALUES ('doc_cutter', 10);


--Populate initial Patients
INSERT INTO Users (alias, password, level) VALUES ('pat_bob', PASSWORD(alias), '0');
INSERT INTO Patient (alias, firstname, lastname, provinceID, city, email) VALUES ('pat_bob', 'Bob', 'Bobberson', 'ON', 'Waterloo', 'thebobbersons@sympatico.ca');

INSERT INTO Users (alias, password, level) VALUES ('pat_peggy', PASSWORD(alias), '0');
INSERT INTO Patient (alias, firstname, lastname, provinceID, city, email) VALUES ('pat_peggy', 'Peggy', 'Bobberson', 'ON', 'Waterloo', 'thebobbersons@sympatico.ca');

INSERT INTO Users (alias, password, level) VALUES ('pat_homer', PASSWORD(alias), '0');
INSERT INTO Patient (alias, firstname, lastname, provinceID, city, email) VALUES ('pat_homer', 'Homer', 'Homerson', 'ON', 'Kitchener', 'homer@rogers.com');

INSERT INTO Users (alias, password, level) VALUES ('pat_kate', PASSWORD(alias), '0');
INSERT INTO Patient (alias, firstname, lastname, provinceID, city, email) VALUES ('pat_kate', 'Kate', 'Katemyer', 'ON', 'Cambridge', 'kate@hello.com');

INSERT INTO Users (alias, password, level) VALUES ('pat_anne', PASSWORD(alias), '0');
INSERT INTO Patient (alias, firstname, lastname, provinceID, city, email) VALUES ('pat_anne', 'Anne', 'MacDonald', 'ON', 'Guelph', 'anne@gmail.com');

END
$
DELIMITER;
